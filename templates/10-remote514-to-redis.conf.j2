source s_514 {
  tcp( port(514) flags(no-parse) max-connections(100) );
  udp( port(514) flags(no-parse) );
};

source s_20502 {
  tcp( port(20502) flags(no-parse) );
};

#template t_redis_lpush {
#  template("*3\r\n$$5\r\nLPUSH\r\n$$$(length ${PROGRAM})\r\n${PROGRAM}\r\n$$$(length ${MESSAGE})\r\n${MESSAGE}\r\n");
#};

template t_redis_lpush_json {
  template("*3\r\n$$5\r\nLPUSH\r\n$$$(length \"logstash\")\r\nlogstash\r\n$$$(length \"$(format-json _SRC=\"${HOST}\" MSG=\"${MSG}\" )\")\r\n$(format-json _SRC=\"${HOST}\" MSG=\"${MSG}\" )\r\n");
};

parser p_json { json-parser(); };

destination d_redis_tcp {
  network("127.0.0.1" port(6379) template(t_redis_lpush));
};
destination d_redis_tcp_json {
  tcp("127.0.0.1" port(6379) template(t_redis_lpush_json) so-keepalive(yes) flush-lines(10) keep-alive(yes) throttle(5) );
};

destination d_redis {
  redis( 
    command( \
      "LPUSH" \
      "logstash" \
      "$(format-json _SRCIP=\"${SOURCEIP}\" _SRCHOST=\"${HOST}\" _RCVDBY=\"${LOGHOST}\" MSG=\"${MSG}\" )"
    )
  );
};

destination d_redis_alreadyjson {
  redis(
    command( \
      "LPUSH" \
      "logstash" \
      "$(format-json _SRCIP=\"${SOURCEIP}\" _SRCHOST=\"${HOST}\" _RCVDBY=\"${LOGHOST}\" _SRCDEF=\"${SOURCE}\" --scope nv-pairs --exclude MESSAGE --exclude SOURCE )"
    )
  );
};

destination d_unix_stream {
  unix-stream("/tmp/redis.sock" template(t_redis_lpush_json) );
};

destination d_remote_net_clump {
  file("/var/log/netlog/all-$YEAR$MONTH$DAY"
    owner(root)
    group(root)
    perm(0644)
    dir_perm(0755)
    create_dirs(yes)
    template("$R_DATE $HOST $MESSAGE\n")
  );
};

destination d_remote_net {
  file("/var/log/netlog/$HOST/$YEAR$MONTH$DAY" owner(root) group(root) perm(0644) dir_perm(0755) create_dirs(yes) );
};

destination d_remote_net_json {
  file("/var/log/netlog/$HOST/$YEAR$MONTH$DAY.json"
    owner(root)
    group(root)
    perm(0644)
    dir_perm(0755)
    create_dirs(yes)
    template("$(format-json --scope nv-pairs --exclude MESSAGE )\n")
  );
};

log { source(s_514); destination(d_redis); flags(flow-control); };
#log { source(s_514); destination(d_remote_net_clump); };
log { source(s_514); destination(d_remote_net); };
#log { source(s_514); destination(d_redis_tcp_json); };
#log { source(s_514); destination(d_unix_stream); };
#log { source(s_20502); parser(p_json); destination(d_redis_alreadyjson); };
#log { source(s_20502); destination(d_remote_net_clump); };
log { source(s_20502); parser(p_json); destination(d_remote_net_json); };
log { source(s_20502); parser(p_json); destination(d_redis_alreadyjson); };

